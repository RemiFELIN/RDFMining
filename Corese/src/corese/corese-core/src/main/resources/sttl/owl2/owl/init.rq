#
# defaut processing of a variable is 
# st:turtle on URI 
# st:apply-templates on Blank and Literal
# Functions in package are exported and can be reused in subtransformations
# Olivier Corby, Wimmics Inria I3S, 2014
#
prefix owlfs: <http://ns.inria.fr/sparql-template/owlfs/>

template st:profile(?in) {
   
}
where {}

 function st:process(?in) {  
      if (isURI(?in), owlfs:pretty(?in),	
        st:apply-templates(?in))
}
    
# export to sub transformations (export to Interpreter)    
@public {

    function owlfs:pretty(?in) {
      let (?t = st:turtle(?in)){
        if (st:get(st:html, true), 
	      owlfs:protect(?t), ?t)
      }
    }
    
    function owlfs:display(?in) {
        if (st:get(st:html, true), owlfs:protect(?in), ?in)
    }
  
   function owlfs:protect(?s) {
        replace(replace(?s, "&", "&amp;"), "<", "&lt;")
   }
    
    # used by sub transformations, with st:owlexp
    function owlfs:process(?in) {
      if (isURI(?in), owlfs:pretty(?in),	
        st:apply-templates-with(st:owlexp, ?in))
    }
}
    
  
  function xt:nl(?x, ?n) {
    if (?x = "", ?x, 
      concat(?x, if (?n = 1, "\n", "\n\n")))
 }
  
  function xt:system(?t) {
          (strstarts(?t, owl:) 
       ||  strstarts(?t, rdf:) 
       ||  strstarts(?t, rdfs:)
       ||  strstarts(?t, xsd:))
  }

