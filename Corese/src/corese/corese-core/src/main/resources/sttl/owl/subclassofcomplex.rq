#
# tricky case:
# subclassOf(intersectionOf() ?y)
# there are two templates for intersection/union 
# depending if it is embedded in subClassOf or not
#
template {
    "SubClassOf(" 
    
    box { 
      st:call-template(st:interunion, ?in)
      st:nl()
      ?y 
    }
      
    ")" 
}
where {
  ?in rdfs:subClassOf ?y 
  filter  exists { 
    ?in owl:intersectionOf | owl:unionOf | 
      owl:complementOf | owl:datatypeComplementOf ?z 
  } 
}
