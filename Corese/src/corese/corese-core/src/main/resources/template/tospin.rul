<?xml version='1.0' encoding='UTF-8'?>
<!--
SPARQL Template Transformation
Olivier Corby - Wimmics - Inria UNS CNRS I3S
Fri Jun 21 13:43:42 CEST 2019
-->
<rdf:RDF  xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#'
  xmlns='http://ns.inria.fr/sparql-template/'>
<rule>
<body>
<![CDATA[
template st:close {
  
  "</table>"
   
}
where {

}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:tosparql {
  
  st:call-template(st:query, st:call-template(st:sparql))
  
  st:call-template(st:queryspin, coalesce(st:get(st:query), ""))
  
}
where {

}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[

template st:sparql {
  
  st:apply-templates-with(st:spin)
  
}
where {
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:link(?uri, ?title) {
   "<a href=\""  str(?uri) "\">" str(?title) "</a>"
}
where {
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
#
# SPARQL SPIN Transformation
# RDF Graph is a SPIN Graph
# Transformation generates SPIN and SPARQL
# Olivier Corby - Wimmics Inria I3S - 2014
#
template st:start {

  st:head()
  
  st:call-template(st:page)
  
  st:tail()

}
where {
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
prefix sp:      <http://spinrdf.org/sp#> .
template st:page {

  "<h3>SPARQL-SPIN Translator</h3>"
  
   if (contains(st:get(st:service),  "tospin"),
     st:call-template(st:tospin),
     st:call-template(st:tosparql))
  
}
where {

}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:profile {
    
}
where {}


]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:open {

  """
  <h3>Result</h3>
  <table>
  <tr>
  <th></th><th>subject</th><th>property</th><th>object</th>
  </tr>
  """
  
}
where {
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:table {

 "<tr>"
 "<th>"      st:number()
 "</th><td>" st:call-template(st:linkesc, ?x) 
 "</td><td>" st:call-template(st:esc, ?p) 
 "</td><td>" st:call-template(st:linkesc, ?y) 
 "</td>"
 "</tr>"
 
}
where {
  ?x ?p ?y
  filter (?x = coalesce(st:get(st:uri), ?x))
}
order by ?x ?p ?y
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[

template st:spin {
  
  "@prefix sp: <http://spinrdf.org/sp#> .\n\n"
  st:apply-templates-with(st:turtle)
  
}
where {
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:query(?q) {

format {
  """
  <h3>SPARQL Query</h3>
  <form method='post' id='spin' action='/spin/tospin'>  
    <input type='hidden' name='transform' value='%s' />    
    <textarea cols='60' rows='15' id='query' name='query'>%s</textarea>
    <br/>       
    <input type='submit' value='submit' class='btn btn-default' onClick='trans(this.form); return false;' />      
  </form>
  """
  
  st:get(st:transform)
  str(?q)
  }
}
where {
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:queryspin(?q) {
format {
  """
  <h3>SPIN Query</h3>
  <form method='post' id='sparql' action='/spin/tosparql'> 
    <input type='hidden' name='transform' value='%s' />    
    <textarea cols='60' rows='15' id='query2' name='query'>%s</textarea>
    <br/>           
    <input type='submit' value='submit'"  class='btn btn-default' onClick='trans(this.form); return false;'  />      
  </form>
  """
  
  st:get(st:transform)
  str(?q)
  }
}
where {
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:esc(?x) {

  str(?d)
    
}
where {

   bind(st:turtle(?x) as ?t)
   
   bind(
    if (isURI(?x) && strstarts(?t, "<"), str(?x), ?t) 
    as ?d) 
    
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:linkesc(?x) {

  if (isURI(?x), 
    st:call-template(st:link, ?x, ?e),
    str(?e))
    
}
where {

  bind (st:call-template(st:esc, ?x) as ?e)
    
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:tospin {
  
  st:call-template(st:query, coalesce(st:get(st:query), ""))
  
  st:call-template(st:queryspin, st:call-template(st:spin))
  
}
where {

}
]]>
</body>
</rule>

</rdf:RDF>
