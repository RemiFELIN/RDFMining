<?xml version='1.0' encoding='UTF-8'?>
<!--
SPARQL Template Transformation
Olivier Corby - Wimmics - Inria UNS CNRS I3S
Fri Jun 21 13:43:42 CEST 2019
-->
<rdf:RDF  xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#'
  xmlns='http://ns.inria.fr/sparql-template/'>
<rule>
<body>
<![CDATA[
template st:superClassExpression(?x) {
	?suc
}
where {
	bind(
		if (isURI(?x), true,
			st:apply-templates-all(?x)
		)
	as ?suc)
	
	filter(st:alreadyVisited(?x, "super", ?suc))
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:profile {

}
where {}

 function st:aggregate(?x) { st:agg_and(?x) }
  
  function st:err(?x) { URI(concat(st:, "owlql/", str(?x))) }
  
  function st:alreadyVisited(?x, ?tag, ?suc) {
    if (st:visited(?x), true, st:visit(st:err(?tag), ?x, ?suc)) 
  }


]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template {
	?suc
}
where {
	?in owl:intersectionOf ?z
	?z rdf:rest*/rdf:first ?e
	
	bind (
		st:call-template(st:superClassExpression, ?e)
		as ?suc
	)
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
#
# Check if there is an unauthorized OWL property for superClassExpression ?in
# return false in this case, otherwise template fails (return nothing)
#
template {
	false
}
where {
	?in ?p ?y
	
	bind (
		?p in (
			owl:intersectionOf, owl:complementOf,
			owl:onProperty, owl:someValuesFrom, owl:onClass,
			rdf:type
		)
	as ?suc)
		
	filter (st:visit(st:err("failSuper"), ?in, ?suc))
	filter(! ?suc)
}
limit 1
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template {
	?suc
}
where {
	?in a owl:Restriction ;
	  owl:onProperty ?p
	
	 bind ( exists { ?in owl:someValuesFrom ?e
	  		  filter (isURI(?e)) 
	  		}
     as ?suc )
      
     filter(st:visit(st:err("failSuper"), ?in, ?suc))
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template {
	?suc
}
where {
	?in owl:complementOf ?z
	
	bind (
		st:call-template-with(st:subexpowlqltc, st:subClassExpression, ?z)
	as ?suc)
}
]]>
</body>
</rule>

</rdf:RDF>
