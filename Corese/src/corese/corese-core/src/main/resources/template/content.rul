<?xml version='1.0' encoding='UTF-8'?>
<!--
SPARQL Template Transformation
Olivier Corby - Wimmics - Inria UNS CNRS I3S
Fri Jun 21 13:43:42 CEST 2019
-->
<rdf:RDF  xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#'
  xmlns='http://ns.inria.fr/sparql-template/'>
<rule>
<body>
<![CDATA[
#
# For each day of a calendar (see st:calendar/st:date)
# generate href with query to dbpedia about event of this date
# use year 2000 to have a bisextile year (to get January 29)
#
template st:dbpedia(?date) {
  format {
    "<a href='%s'>%s</a>"
    
    st:plink(concat("st:d2000-", month(?date), "-", day(?date)))
    day(?date)
  } 
}
where {

}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
#
# Display a day in the calendar of a month
# May be a link or a number
#
template st:date(?date) {

    if (?b, st:call-template(st:link, ?date), day(?date))
  
}
where {
  values ?date { UNDEF }
  bind (
      exists {   
        values ?date { UNDEF }
        ?x ?p ?dd 
        filter (datatype (?dd) in (xsd:date, xsd:dateTime)) 
        filter (year(?dd) = year(?date) 
            && month(?dd) = month(?date) 
            && day(?dd) = day(?date)) } 
    as ?b)
   
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:link(?date) {

  "<a href='#" str(?date) "'>"  day(?date)  "</a>"
  
}
where {
   
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
#
# Display a calendar and a graph content
#
template st:start {
  
  st:call-template(st:main)
  
}
where {
  
  # export to st:calendar (see st:calendar/st:date)
  bind (st:export(st:content, st:content) as ?c)
  bind (st:export(st:date, st:date)       as ?d)
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
prefix cal: <http://ns.inria.fr/sparql-extension/calendar/>
template st:content(?year) {

format {
  """
  <a name='%s'/>
  <h4>%s</h4>  
  <p>%s</p>
  """
  
  str(?dd)
  str(?dd)
  group {
    format {
      "<a href='%s'>%s</a>"  
      
      st:plink(?x, st:dbpedia)
      str(?title)
    } 
    
    ; separator = "<br/>"
  }
}

}
where {

  bind (coalesce(st:get(st:allyear), false) as ?all)
  
  {select distinct ?x ?date 
  where {
    ?x ?p ?date 
    filter (datatype(?date) in (xsd:date, xsd:dateTime))     
  }}
  
  filter (?all || year(?date) = ?year)
  bind (cal:date(year(?date), month(?date), day(?date)) as ?dd)
  ?x rdfs:label ?l 
  bind (if (bound(?l), ?l, ?x) as ?title)
}
group by ?date
order by ?date 
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
#
# Display a calendar and a graph content
# ?uri = st:y2000 | st:dyyyy-mm-dd
#
template st:main {

  "<h2 class='center'>" st:get(st:title) "</h2>"

  st:call-template-with(st:calendar, st:main, ?year)
  
  st:call-template(st:content, ?year)
  
}
where {
  bind (st:get(st:uri) as ?uri)
  bind (substr(?uri, strlen(st:) + 2) as ?str)
  bind (if (contains(?str, "-"), strbefore(?str, "-"), ?str) 
  as ?tmp)
  bind (coalesce(xsd:integer(?tmp), year(now())) as ?year)
  
  bind (st:export(st:service, st:get(st:service)) as ?serv)
  bind (st:export(st:profile, st:get(st:profile)) as ?prof)
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
#
# Display a calendar and a graph content
# Specify named template (st:dbpedia) to be called by calendar
#
template st:query {
  
  st:call-template(st:main)
  
}
where {
  # export to st:calendar (see st:calendar/st:date)
  bind (st:export(st:content, st:content) as ?c)
  bind (st:export(st:date, st:dbpedia)    as ?d)
  
  bind (st:set(st:allyear, true) as ?a)
  
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
prefix cal: <http://ns.inria.fr/sparql-extension/calendar/>
template st:profile {
           
}
where {}





    
]]>
</body>
</rule>

</rdf:RDF>
