<?xml version='1.0' encoding='UTF-8'?>
<!--
SPARQL Template Transformation
Olivier Corby - Wimmics - Inria UNS CNRS I3S
Fri May 07 14:42:27 CEST 2021
-->
<rdf:RDF  xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#'
  xmlns='http://ns.inria.fr/sparql-template/'>
<rule>
<body>
<![CDATA[
template st:profile {
  
}
where {}

  function st:aggregate(?x) { st:agg_and(?x) }
  
  function st:err(?x) { URI(concat(st:, "owlrl/", str(?x))) }

  function st:alreadyVisited(?x, ?tag, ?suc) {
    if (st:visited(?x), true, st:visit(st:err(?tag), ?x, ?suc)) 
  }


]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:equivClassExpression(?x) {
  ?suc
}
where {
    bind (
      if (isURI(?x), ?x != owl:Thing, 
         st:apply-templates-all(?x))
    as ?suc)
   
  #filter (st:visit(st:err("equiv"), ?x, ?suc))
  filter(st:alreadyVisited(?x, "equiv", ?suc))
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template {
  ?suc
}
where {
  ?in owl:intersectionOf ?z 
  ?z rdf:rest*/rdf:first ?e 
  
  bind (
    st:call-template(st:equivClassExpression, ?e)
    as ?suc
  )
  
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
#
# Check if there is an unauthorized OWL property for equivClassExpression ?in
# return false in this case, otherwise template fails (return nothing)
#
template {
  false
}
where {
    ?in ?p ?y
    
    bind (
      ?p in (
        owl:equivalentClass, owl:intersectionOf, 
	owl:onProperty, owl:hasValue, 
	rdf:type
	)
      as ?suc)
     
      filter (st:visit(st:err("failEquiv"), ?in, ?suc))
      filter (! ?suc)
}
limit 1
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template {
  true
}
where {
   ?in a owl:Restriction ;
	owl:onProperty ?p ;
	owl:hasValue ?v 	        
}
	    
]]>
</body>
</rule>

</rdf:RDF>
