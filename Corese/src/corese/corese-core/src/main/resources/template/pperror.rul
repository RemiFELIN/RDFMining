<?xml version='1.0' encoding='UTF-8'?>
<!--
SPARQL Template Transformation
Olivier Corby - Wimmics - Inria UNS CNRS I3S
Fri May 07 14:42:27 CEST 2021
-->
<rdf:RDF  xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#'
  xmlns='http://ns.inria.fr/sparql-template/'>
<rule>
<body>
<![CDATA[
template st:allRL(?tag) {
if (st:get(st:execmode, st:standalone), 
    st:format("%s", ?mess), 
    st:format(
        "<span class=owlrl>OWL RL: <a href='%s'>%s</a>.</span>", 
        str(?href), str(?mess)))
}
where {
	bind(st:linkPro(?id) as ?href)
} 
values (?tag ?mess ?id) {
	### axiom ###
	("datatypeLit" "Restriction on datatypes" "Entities_3")
	("datatypeRes" "Restriction on datatypes" "Entities_3")
	("disjointClass" "Class Expression not supported with a Disjoint Class" "Axioms_3")
	("domain" "Class Expression not supported as object of rdfs:domain or rdfs:range" "Axioms_3")
	("equivClass" "Class Expression not supported with owl:equivalentClass" "Class_Expressions_3")
	("key" "Class Expression not supported as subject of owl:hasKey" "Axioms_3")
	("fail" "Statement not supported" "Feature_Overview_3")
	("properties" "Property not supported" "Entities_3")
	("subClass" "Class Expression not supported with rdfs:subClassOf" "Class_Expressions_3")
	
	### equiv Class Expression ###
	("failEquiv" "Statement not supported in an Equivalent Class Expression" "Class_Expressions_3")
	("equiv" "Class Expression not supported with owl:equivalentClass or owl:intersectionOf" "Class_Expressions_3")
		
	### sub Class Expression ###
	("failSub" "Statement not supported in a Sub Class Expression" "Class_Expressions_3")
	("sub" "Not a valid Sub Class Expression" "Class_Expressions_3")
	
	### super Class Expression ###
	("failSuper" "Statement not supported in a Super Class Expression" "Class_Expressions_3")
	("super" "Not a valid Super Class Expression" "Class_Expressions_3")
	
	###  Individual ###
	("individual"  "Not a valid individual type expression" "Axioms_3" )
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:mainOWL(?tag) {
	st:call-template(st:axiomClassExp, ?tag)
}
where {
	
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:mainEL(?tag) {
	st:call-template(st:allEL, ?tag)
	st:call-template(st:oneEL, ?tag)
}
where {
	
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:start(?in) {
  format {
    """
    <span class='errors'>%s</span>
    """
    ?res 
  }  
}
where {
    bind (st:call-template(st:main, ?in) as ?res)
    filter (bound(?res) && strlen(?res) > 0)
} 
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:main(?in) {
    str(?res)  
}
where {
  values ?e { unnest(st:errors(?in)) }
  filter strstarts(?e, st:)
  
  bind (strafter(?e, st:) as ?str)
  bind (strbefore(?str, "/") as ?type)
  bind (strafter(?str, "/")  as ?desc)
    
values (?type ?uri) {
    ("owlel" st:mainEL)
    ("owlql" st:mainQL)
    ("owlrl" st:mainRL)
    ("owltc" st:mainOWL)
} 

 bind ( st:call-template(?uri, ?desc)  as ?res)
 
 filter (strlen(?res) > 0)
} 
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:displaymap (?amap) {
    st:number() ". " 
    st:call-template(st:main, ?key)
    st:nl() st:nl()
    st:apply-templates-with(st:turtle, ?key) 
    st:nl()
}
where {
    values (?key ?val) { unnest(?amap) }
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:profile {

}
where {}

function st:linkPro(?x) { 
  URI(concat("http://www.w3.org/TR/owl2-profiles/#", str(?x)))
}
	
function st:linkOWL(?x) { 
  URI(concat("http://www.w3.org/TR/owl2-syntax/#", str(?x)))
}

]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:allQL(?tag) {

	"<span class=owlql>OWL QL: <a href='" str(?href) "'>" str(?mess) "</a>.</span>"
	
}
where {

	bind(st:linkPro(?id) as ?href)

} values (?tag ?mess ?id) {
	### axiom ##
	("datatypeLit" "Restriction on datatypes" "Entities_2")
	("datatypeRes" "Restriction on datatypes" "Entities_2")
	("fail" "Statement not supported" "Feature_Overview_2")
	("disjointClass" "Class Expression not supported with a Disjoint Class" "Class_Expressions_2")
	("domain" "Class Expression not supported as object of rdfs:domain or rdfs:range" "Class_Expressions_2")
	("equivClass" "Class Expression not supported with owl:equivalentClass" "Axioms_2")
	("anonymous" "Anonymous individuals are not supported" "Entities_2")
	("propertyChain" "Property inclusions involving property chains not supported" "OWL_2_QL_2")
	("subClass" "Class Expression not supported with rdfs:subClassOf" "Class_Expressions_2")
	
	### sub Class Expression ###
	("sub" "Not a valid Sub Class Expression" "Class_Expressions_2")
	("failSub" "Statement not supported in a Sub Class Expression" "Class_Expressions_2")
	
	### super Class Expression ###
	("failSuper" "Statement not supported in a Super Class Expression" "Class_Expressions_2")
	("super" "Not a valid Sub Class Expression" "Class_Expressions_2")
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:allEL(?tag) {

	"<span class=owlel>OWL EL: <a href='" str(?href) "'>" str(?mess) "</a>.</span>"

}
where {

	bind(st:linkPro(?id) as ?href)
	
} values (?tag ?mess ?id) {
	### axiom ###
	("datatypeLit" "Restriction on datatypes" "Entities")
	("datatypeRes" "Restriction on datatypes" "Entities")
	("fail" "Statement not supported" "Feature_Overview")
	("disjointClass" "Class Expression not supported with a Disjoint Class" "Class_Expressions")
	("domain" "Class Expression not supported as object of rdfs:domain or rdfs:range" "OWL_2_EL_2")
	("equivClass" "Class Expression not supported with owl:equivalentClass" "Class_Expressions")
	("anonymous" "Anonymous individuals are not supported" "Entities")
	("key" "Class Expression not supported as subject of owl:hasKey" "OWL_2_EL_2")
	("subClass" "Class Expression not supported with rdfs:subClassOf" "Class_Expressions")

	### classExp ###
	("failClassExp" "Statement not supported in a Class Expression" "Class_Expressions")
	("classExp" "Not a valid Class Expression" "Class_Expressions")
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:oneEL(?tag) {

	"<span class=owlel>OWL EL: Enumeration with more than one <a href='" str(?hrefa) "'>" str(?messa) "</a> or <a href='" str(?hrefb) "'>" str(?messb) "</a>.</span>"

}
where {

	bind(st:linkPro(?ida) as ?hrefa)
	bind(st:linkPro(?idb) as ?hrefb)
	
} values (?tag ?messa ?ida ?messb ?idb) {
	### classExp ###
	("one" "individual" "Class_Expressions" "literal" "Data_Ranges")
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:mainRL(?tag) {
	st:call-template(st:allRL, ?tag)
}
where {
	
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:mainQL(?tag) {
	st:call-template(st:allQL, ?tag)
}
where {

}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:axiomClassExp(?tag) {

	"<span class=owl>OWL: Statement not supported without a <a href='" str(?href) "'>" str(?mess) "</a> or a <a href='" str(?hrefb) "'>" str(?messb) "</a>.</span>"

}
where {

	bind(st:linkOWL(?id) as ?href)
	bind(st:linkOWL(?idb) as ?hrefb)
	
} values (?tag ?mess ?id ?messb ?idb) {
	### axiom ###
	("axiomClassExp" "Class Expression" "Class_Expressions" "Data Range" "Data_Ranges")
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template st:display (?amap) {

    if (xt:size(?amap) = 0, 
        "OWL RL Ontology",
        concat("Ontology not in OWL RL: ", xt:size(?amap), " failures"))
        
    st:nl() st:nl() 
    
    st:call-template(st:displaymap, ?amap)
}
where {
    bind (st:set(st:execmode, st:standalone) as ?tmp)
}
]]>
</body>
</rule>

</rdf:RDF>
