<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE rdf:RDF [
  <!ENTITY rule   "http://ns.inria.fr/corese/rule/"> 
  <!ENTITY rdf    "http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <!ENTITY rdfs   "http://www.w3.org/2000/01/rdf-schema#">
  <!ENTITY xsd    "http://www.w3.org/2001/XMLSchema#">
  <!ENTITY spin   "http://spinrdf.org/sp#">
  <!ENTITY owl    "http://www.w3.org/2002/07/owl#">
]>
<!--
  OWL RL construct-where Rule Base
  Optimized for Corese/KGRAM
  Added filters 
  ?c1 != ?c2 on classes and 
  ?p1 != ?p2 on properties 
  
  
  Maxime LefranÃ§ois & Olivier Corby - Wimmics INRIA I3S - 2014-2021
  @todo: 
  some rules require explicit c a owl:Class
  e.g. x a owl:Class -> x rdfs:subClassOf owl:Thing
  what if c a owl:Class is missing ?
  e.g. ex:Man rdfs:subClassOf ex:Human 
  and no ex:Man a owl:Class ?

  a owl:Restriction not considered as a owl:Class
-->

<rdf:RDF 
    xmlns:rdf  = "&rdf;"
    xmlns:rdfs = "&rdfs;"
    xmlns:xsd  = "&xsd;" 
    xmlns:rule = "&rule;#"
    xmlns:owl  = "&owl;"
    xmlns:sp   = "&spin;"
    xmlns      = "&rule;"  >

<rule  rdf:about='&rdfs;member'>
<body>  <!--  prp-dom -->
CONSTRUCT {
    ?x rdfs:member ?y
}
WHERE {    
    ?x ?p ?y 
    filter strstarts(?p, rdf:_)
}
</body>
</rule>
    
    
<rule  rdf:about='&rdfs;domain'>
<body>  <!--  prp-dom -->
CONSTRUCT {
    ?x a ?c .
}
WHERE {
    ?p rdfs:domain ?c .
    ?x ?p ?y .
}
</body>
</rule>



<rule  rdf:about='&rdfs;range'>
<body>  <!--  prp-rng -->
CONSTRUCT {
    ?y a ?c .
}
WHERE {
    ?p rdfs:range ?c .
    ?x ?p ?y . filter (! isLiteral(?y))
}
</body>
</rule>

<rule rdf:about='&rdfs;subPropertyOf2'>
<body>  <!-- scm-spo    -->
CONSTRUCT {
    ?p1 rdfs:subPropertyOf ?p3 .
}
WHERE {
    ?p1 rdfs:subPropertyOf ?p2 .
    ?p2 rdfs:subPropertyOf ?p3 .
}

</body>
</rule>

<rule rdf:about='&rdfs;subPropertyOf3'>
<body>  <!--  prp-spo1 -->
CONSTRUCT {
    ?x ?p2 ?y .
}
WHERE {
    ?p1 rdfs:subPropertyOf ?p2 . filter (?p1 != ?p2)
    ?x ?p1 ?y .
}

</body>
</rule>

<rule rdf:about='&rdfs;subClassOf5'>
<body>  
CONSTRUCT {
    ?c1 rdfs:subClassOf ?c3 .
}
WHERE {
    ?c1 rdfs:subClassOf ?c2 .
    ?c2 rdfs:subClassOf ?c3 .
}
</body>
</rule>


<rule rdf:about='&rdfs;subClassOf6'>
<body>
CONSTRUCT {
    ?x a ?c2 .
}
WHERE {
    ?x a ?c1 .
    ?c1 rdfs:subClassOf ?c2 
}
</body>
</rule>



</rdf:RDF>
