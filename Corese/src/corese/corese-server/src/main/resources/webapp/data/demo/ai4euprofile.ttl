@prefix ai:     <http://www.ai4eu.eu/ontologies/core#>
@prefix aid:    <http://www.ai4eu.eu/ontologies/data#>
@prefix spq:    <http://ns.inria.fr/sparql-template/sparql#>
@prefix navlab: <http://ns.inria.fr/sparql-template/navlab#>
prefix rel: <http://ai4eu.org/onto/>
prefix ns:  <http://ai4eu.org/ns/>


st:access st:namespace <sttl/>
.


st:ai4eu a st:Server ;
st:service "ai4eu" ;
st:shareContent st:ai4euContent ;
#st:transform st:web ;
st:workflow st:ai4euwf ;
st:param [
    st:lang 'en' ;
    # transformation for the result of the query in the st:web transformation
    st:sttl <sttl/combine.rul> ;
    # list of transformations for the st:combine transformation
    st:transformations (spq:result navlab:map <sttl/chart.rul> ) ;
    st:lodprofile (
        (<http://ai4eu.org/ns/>   st:sparql) 
        (<http://ai4eu.org/onto/> st:sparql) 
        (<http://www.ai4eu.eu/>   st:sparql)
        (ai: st:sparql)         
        (aid: st:sparql)         
        (dc: st:sparql)  
        (<http://purl.org/dc/elements/1.1/> st:sparql)
        (foaf: st:sparql)  
        (rdf: st:sparql) 
        (rdfs: st:sparql)
        (owl: st:sparql)
        ("*" st:lod)
    ) ;
    st:mapzoom 3 ;
    st:mapsize "mapmedium" ;
    st:hyperlink true ; 
    st:title "AI4EU";
    st:prefix (("ai" ai:)) ;
    # authorize update if query has arg="restricted"
    st:restricted true ;
    #st:exportlist (st:lodprofile st:transformations st:sttl st:location st:mapzoom st:mapsize st:mappings) ;
    st:export true ;
    # do not focus sttl result on st:uri because it is the URI of the query not of a target resource
    st:focus false 
] 
.


st:ai4eushape a st:Server ;
    st:service "ai4eushape" ;
    st:shareContent st:ai4euContent ;
    st:workflow st:ai4eushape  ;
sw:body ( 
    [ a sw:Shape  ]
    [ a sw:Transformation ; sw:uri st:dsresult ]
) .




st:ai4euwf a sw:Workflow ; 
sw:body (
    [ a sw:Query ; sw:result sw:graph ] # place holder where to put the query to be executed from the tutorial
    [ a sw:RuleBase ;  sw:uri sw:owlrl ; sw:onupdate true ]
    [ a sw:Transformation ; sw:uri st:web ]
)
.


st:ai4eusparql a st:Server ;
st:service "ai4eusparql" ;
st:shareContent st:ai4euContent ;
st:param [
    st:lang 'en' ;    
    st:hyperlink true ; 
    #st:number true ;
    st:title "AI4EU";
    st:export true ;
    st:focus false ;
     st:lodprofile (
        (ai: st:sparql)         
        ("*" st:lod)
    ) ;
] 
.



st:ai4euContent a sw:Workflow ; 
sw:body ( 
    [ a sw:Parallel ; sw:body ( 
      # main is empty

      [ a sw:Workflow ; sw:body ( 
        [ a sw:Load ; sw:path <ai4eu/ai4eu.ttl> ]         
        [ a sw:Load ; sw:path 
        <ai4eu/data/ellogon.ttl>,                 
        <ai4eu/data/unbbayes.ttl> , 
        <ai4eu/data/copernicus-sentinel.ttl> , 
        <ai4eu/data/mc-giver.ttl> , 
        <ai4eu/data/wildatpytorch.ttl>,
        <ai4eu/data/ai4eu-categories.ttl>,
        <ai4eu/data/kg.ttl>
        ]         
        [ a sw:RuleBase ;  sw:uri sw:owlrl ]
        ) ]
      
      # context dataset with predefined queries in a specific graph
      [ a sw:Workflow ; sw:name st:context ; sw:body ( 
        [ a sw:Query ; sw:uri  <ai4eu/function/process.rq> ] # function definition
        [ a sw:Load  ; sw:path <ai4eu/workflow.ttl>  ; sw:name st:context ]
        st:indexQuery ) ]
                	  
      ) ]  
      
    # set st:context graph as named graph of main
    [a sw:Dataset]
).


#
# http://localhost:8080/srv/service/display?uri=http://ai4eu.org/onto/include
#
st:dsp a st:Server ;
st:service "display" ;
st:workflow st:dsp ;
st:param [
    #st:export true;
    st:title "Display" ;
    st:hierarchy (rel:relate_to ) ;
    st:trace false ;
    st:prefix (("ai" ai:)("ns" ns:)("rel" rel:))
] ;
st:shareContent st:ai4euContent ;
sw:body ( 
    #[ a sw:Dataset ; sw:mode sw:new ] 
    #[ a sw:Load ] # sw:uri = st:param 
    [ a sw:Query ; sw:uri <ai4eu/query/construct.rq> ] 
    [ a sw:Transformation ; sw:uri d3:ontology ] 
)
.









