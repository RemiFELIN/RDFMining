<?xml version='1.0' encoding='UTF-8'?>
<!--
SPARQL Template Transformation
Olivier Corby - Wimmics - Inria UNS CNRS I3S
Fri Jun 21 13:43:42 CEST 2019
-->
<rdf:RDF  xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#'
  xmlns='http://ns.inria.fr/sparql-template/'>
<rule>
<body>
<![CDATA[
template st:default(?in) { 
}
where {
}

]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
#
# defaut processing of a variable is 
# st:turtle on URI 
# st:apply-templates on Blank and Literal
# Literals are displayed by st:xsdLiteral  (literalvalue.rq)
# otherwise must use st:turtle explicitely (e.g. cardinality.rq)
#
# Olivier Corby, Wimmics Inria I3S, 2014
#
prefix owlfs: <http://ns.inria.fr/sparql-template/owlfs/>

template st:profile(?in) {

}
where {}

 function st:process(?in) {  owlfs:process(?in) }

]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template {
    "Declaration(" xsd:string(?l) "(" 
    ?in  
    "))"   
}
where {
select ?in ?t ?l where {
  ?in a ?t
  values (?t ?l) {
    (owl:ObjectProperty 	"ObjectProperty")
    (owl:DatatypeProperty 	"DataProperty")
    (owl:AnnotationProperty 	"AnnotationProperty")
    (owl:TransitiveProperty  	"ObjectProperty")
    (owl:SymmetricProperty  	"ObjectProperty")
    (owl:InverseFunctionalProperty  	"ObjectProperty")
  }
}
limit 1
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template {
    "Declaration("
    
    st:call-template-with(st:owlclass, st:annotate, ?in, rdf:type, owl:Class)
    
    "Class(" ?in  "))"  
}
where {
  ?in a owl:Class 
}

]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template {
     "Declaration(Datatype(" ?in  "))"  
}
where {
  ?in a rdfs:Datatype
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template {
    "Declaration(NamedIndividual(" ?in  "))"   
}
where {
  ?in a owl:NamedIndividual
}

]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
template {
     "Declaration(Datatype(" ?in  "))"  
}
where {
  ?in owl:equivalentClass ?y .
  ?y a rdfs:Datatype
  filter not exists { ?in a rdfs:Datatype }
}
]]>
</body>
</rule>

</rdf:RDF>
