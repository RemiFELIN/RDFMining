<?xml version='1.0' encoding='UTF-8'?>
<!--
SPARQL Template Transformation
Olivier Corby - Wimmics - Inria UNS CNRS I3S
Wed Oct 16 10:55:07 CEST 2019
-->
<rdf:RDF  xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#'
  xmlns='http://ns.inria.fr/sparql-template/'>
<rule>
<body>
<![CDATA[
#
# SHACL Interpreter
# http://w3c.github.io/data-shapes/shacl/
# Functions are defined in resources/function/datashape, see target.rq and main.rq
#
# main: shapes with targets
# core: shape constraints (property, path, constraint, and, or, not, closed)
# path:       property path constraint
# constraint: node constraint
#
# Olivier Corby - Wimmics Inria I3S - 2016-2019
#
prefix sh: <http://www.w3.org/ns/shacl#> 

template st:start(?shapeGraph) {
    ?g
}
where {
  bind (coalesce(?shapeGraph, st:get(st:shape), st:shape) as ?shape)
  bind (coalesce(st:get(st:function), sh:shacl) as ?fun)
  bind (funcall(?fun, ?shape) as ?g)
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
#
# SHACL Interpreter
#
# Olivier Corby - Inria I3S - 2016
#
prefix sh: <http://www.w3.org/ns/shacl#> 

template st:main(?shape, ?name, ?s, ?sh) {
    ?g
}
where {
  bind (
    sh:shacl(?shape, 
        apply(?name, if (bound(?sh), xt:list(?shape, ?s, ?sh), xt:list(?shape, ?s))) )
    as ?g) 
}
]]>
</body>
</rule>

<rule>
<body>
<![CDATA[
prefix sh:   <http://www.w3.org/ns/shacl#> 
prefix fun:  <http://www.w3.org/ns/shacl#> 
prefix java: <http://www.w3.org/ns/shacl#>  
prefix doc:  <http://w3c.github.io/data-shapes/shacl/#>

# @compile <fr.inria.corese.extension.DataShape>  @path </user/corby/home/NetBeansProjects/corese-github/kgtool/src/main/java/fr/inria/corese/extension/>

# @import <http://ns.inria.fr/sparql-template/function/datashape/main.rq>

@import <function/datashape/main.rq>   

template st:profile {} where {}


@skip
function st:aggregate(out) {
  st:agg_and(out)
}

@skip
function st:default(term){
    true
}

@skip
function st:defaultNamed(term){
    true
}

#
# Template optimizer
# Results of graph ?shape { ?sh sh:property ?cst } are cached in table: ?sh -> Mappings
# Next evaluations are retrieved from cache: 40% faster
#
function st:optimize(shape, sh){
    true
}







]]>
</body>
</rule>

</rdf:RDF>
