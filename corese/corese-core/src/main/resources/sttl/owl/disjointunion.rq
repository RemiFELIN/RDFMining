#
# tricky case:
# subclassOf(intersectionOf() ?y)
# there are two templates for intersection/union 
# depending if it is embedded in subClassOf or not
#
template {
   "DisjointUnion("  
     if (?iu,
	st:call-template(st:interunion, ?in),
	?in) 
      " "  ?y  
    ")" 
}
where {
  ?in owl:disjointUnionOf ?y 
  bind (
   exists { 
     ?in owl:intersectionOf | owl:unionOf | 
      owl:complementOf | owl:datatypeComplementOf ?z 
   } 
  as ?iu)
}
